@*@model IEnumerable<UniversityProject.Models.Student>*@
@model PagedList.IPagedList<UniversityProject.Models.Student> 
           
<script src="../../Scripts/jquery-ui-1.8.11.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-ui-1.8.11.min.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () {
        $("#SearchString").autocomplete({
            source: "/Student/AutocompleteSuggestions",
            minLength: 1,
            select: function (event, ui) {
                if (ui.item) {
                    $("#SearchString").val(ui.item.value);
                    $("form").submit();
                }
            }
        });
    });
</script>




<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm()) 
{ 
    <p> 
        Find by name: @Html.TextBox("SearchString")   
        <input type="submit" value="Search" /></p> 
}
<table>
    <tr>
      <th></th>
       
    <th> 
        @Html.ActionLink("First Name", "Index", new { sortOrder=ViewBag.NameSortParm }) 
    </th> 
    <th> 
          @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm }) 
    </th> 
    <th> 
        @Html.ActionLink("Enrollment Date", "Index", new { sortOrder=ViewBag.DateSortParm }) 
    </th> 
   

    </tr>

@foreach (var item in Model) {
    <tr>
    <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.StudentID }) |
            @Html.ActionLink("Details", "Details", new { id=item.StudentID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.StudentID })
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FirstMidName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EnrollmentDate)
        </td>
        
    </tr>
}

</table>
 
<div> 
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) 
    of @Model.PageCount 
      
    @if (Model.HasPreviousPage) 
    { 
        @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  }) 
        @Html.Raw(" "); 
        @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  }) 
    } 
    else 
    { 
        @:<< 
        @Html.Raw(" "); 
        @:< Prev 
    } 
      
    @if (Model.HasNextPage) 
    { 
        @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  }) 
        @Html.Raw(" "); 
        @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  }) 
    } 
    else 
    { 
        @:Next > 
        @Html.Raw(" ") 
        @:>> 
    } 
</div>